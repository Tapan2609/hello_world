#!/bin/bash
  echo "creating service account for application"
  export podName="[pod Name]"
  export appNamespace="[Application Namespace]"
  export APP_UUID="[Application UUID]"
  export APP_ID=`echo $APP_UUID | sed -e "s/-//g"`
  export VAULT_TOKEN=`grep 'Initial Root Token'  /var/vault/config/init.keys | awk '{print $NF}'`
  cat > app-sa.yaml<<EOF
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ${podName}-sa
  namespace: ${appNamespace}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: ${appNamespace}
  name: ${appNamespace}-resource-reader
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods", "services" ]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["batch", "extensions"]
    #
    # at the HTTP level, the name of the resource for accessing Job
    # objects is "jobs"
    resources: ["jobs"]
    verbs: ["get", "list", "watch"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: reader-role-binding-${appNamespace}
  namespace: ${appNamespace}
subjects:
  - kind: ServiceAccount
    name: ${podName}-sa
    namespace: ${appNamespace}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ${appNamespace}-resource-reader
---

  EOF
    kubectl apply -f app-sa.yaml

    echo Creating vault policy
    cat > $APP_UUID.hcl<<EOF
    path "secret/$APP_ID/*" {
    capabilities = ["create", "read", "update", "delete", "list"]
}
    path "secret/$APP_ID" {
    capabilities = ["create", "read", "update", "delete", "list"]
}
    path "secret/$APP_ID/cert" {
    capabilities = ["create", "read", "update", "delete", "list"]
}
    path "secret/$APP_ID/cert/*" {
    capabilities = ["create", "read", "update", "delete", "list"]
}
    EOF

    vault policy write $APP_UUID-policy $APP_UUID.hcl

  # associate/bind SA to policy
    vault write auth/kubernetes/role/${APP_UUID} \
    bound_service_account_names=${podName}-sa \
    bound_service_account_namespaces=${appNamespace} \
    policies=${APP_UUID}-policy \
    ttl=24h

    echo "Adding secrets for the application use"
    export secrets="$(cat ./bin/vault-secrets.txt | xargs)"
    writesecrets $APP_UUID $secrets


    echo "getting vault role created for reference"
    vault read auth/kubernetes/role/${APP_UUID}